import java.awt.Color;
import javax.media.opengl.GL;
import javax.media.opengl.GLAutoDrawable;
import javax.media.opengl.GLEventListener;
import javax.swing.JOptionPane;
import javax.media.opengl.GLCanvas;

/**
 *
 * @author lenovo
 */
public class MidLevel implements GLEventListener {
    GLCanvas gl;
    double px = -146, py = 225;
    public double buffer_px = px;
    public double buffer_py = py;
    final double ONE_DEGREE = (Math.PI / 180);
    final double THREE_SIXTY = 2 * Math.PI;
    private int n;                 // dimension of maze
    int angle = -10;
    int counter=0;
    boolean a=true , b=true , c=true , d =true, e=true ,f=true ,g=true ,k=true ,l=true ,m= true, z1=true,z2=true,z3=true,z4=true,z5=true,z6=true,z7=true,z8=true,z9=true,z10=true,z11=true;   // take coins or not
    String filepath="D:\\Projects\\graphics\\Maze\\src\\Maze\\music\\Arcade-background-music-retro-style.wav";



//    static Sounds pla = Sounds.getInstance();
//    static long clpos;
//    static boolean isp = true;
//    static boolean isL = false;



   // String name = JOptionPane.showInputDialog(null, "Enter Name");

    //  int maze_level = 2;
    // is there a wall to north of cell i, j



    private boolean[][] north = {{
            true, true, true, true, true,false,false,false,false,true,true,true,true},
            {
                    true, false, false, false, true, false, false, false, false,false,false,true,true},
            {
                    true, false, false, true, true, false, false, false, true,false,true,false,true},
            {
                    true, false, false, false, false, true, false, false, true,true,true,false,true},
            {
                    true, false, false, false, false, false, false, false, false,false,false,true,true},
            {
                    true, false, false, false, false, false, false, false, false,false,true,true,true},
            {
                    true, false, true, false, false, false, false, true, false,false,false,false,true},
            {
                    true, true, false, false, false, false, false, false, true,false,false,false,true},
            {
                    true, false, true, false, true, false, false,true, false, false, false,false,true},
            {

                    true, false, false, false, false, false, true, true, true,false,false,false,true},
            {

                    true, false, false, false, false, false, false, false, false,false,true,false,true},
            {

                    true, false, false, false, false, false, false, true,false, false, false, false,true},
            {

                    true, false, false, false, false, false, false, true, false,false,false,false,true},
    };

    private boolean[][] south = {{

            true, true, true, true, true, true, true, true, true,true,true,true,true},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {
                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {

                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {

                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {

                    true, true, false, false, false, false, false, false, false,false,false,false,false},
            {

                    true, true, false, false, false, false, false, false, false,false,false,false,false}};

    private boolean[][] east = {{
            true, true, true, true, true, true, true, true, true,true,true,true,true},
            {
                    true, false, true, true, true, true, true, true, false,true,true,false,false},
            {
                    true, true, true, false, false, false, true, true, true,false,false,false,true},
            {
                    true, true, true, true, true, true, false, true, true,false,true,true,false},
            {
                    true, true, true, true, true, true, true, true, true,true,true,false,false},
            {
                    true, true, true, true,true, true, true, false, true,true,false,false,false},
            {
                    true, false, true, false, true, true, true, true, true,true,true,true,true},
            {
                    true, false, false, true, true, true, true, false, false,true,true,true,false},
            {
                    true, true, true, false, true, true, true, false, true,true,true,true,true},
            {

                    true, false, true, true, true, true, true, false, false,true,true,true,false},
            {

                    true, false, true, true, true, true, true, true, true,false,true,false,true},
            {

                    true, true, true, true, true, true, false, true, true,true,true,true,false},
            {

                    true, true, true, true, true, true, true, true, true,true,true,true,true}
    };

    private boolean[][] west = {{
            true, true, true, true, true, true, true, true, true,true,true,true,true},
            {
                    true, true, true, true, true, true, true, true, true,true,true,true,true},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {
                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {

                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {

                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {

                    true, false,false, false,false,false,false, false,false,false,false,false,false},
            {

                    true, false,false, false,false,false,false, false,false,false,false,false,false}
    };


    double[][] unAllowed_points = {
            { -146.0 , 210.0} ,  { -151.0 , 210.0} ,  { -156.0 , 210.0} ,  { -151.0 , 210.0} ,  { -146.0 , 210.0} ,  { -141.0 , 210.0} ,  { -136.0 , 210.0} ,  { -131.0 , 210.0} ,  { -126.0 , 210.0} ,  { -121.0 , 210.0} , { -81.0 , 225.0} ,  { -81.0 , 220.0} ,  { -81.0 , 215.0} ,  { -81.0 , 210.0} ,  { -81.0 , 215.0} ,  { -81.0 , 220.0} ,  { -81.0 , 225.0} ,  { -81.0 , 230.0} ,  { -81.0 , 235.0} ,  { -81.0 , 240.0},{ -81.0 , 240.0} ,  { -81.0 , 240.0} ,  { -86.0 , 240.0} ,  { -91.0 , 240.0} ,  { -96.0 , 240.0} ,  { -101.0 , 240.0} ,  { -106.0 , 240.0} ,  { -111.0 , 240.0} ,  { -116.0 , 240.0} ,  { -121.0 , 240.0} ,  { -126.0 , 240.0} ,  { -131.0 , 240.0} ,  { -136.0 , 240.0} ,  { -141.0 , 240.0} ,  { -146.0 , 240.0} ,  { -151.0 , 240.0} ,  { -156.0 , 240.0} ,  { -151.0 , 240.0} ,  { -146.0 , 240.0} ,  { -141.0 , 240.0} ,  { -136.0 , 240.0} ,  { -131.0 , 240.0} ,  { -126.0 , 240.0} ,  { -121.0 , 240.0} ,  { -116.0 , 240.0} ,  { -111.0 , 240.0} ,  { -106.0 , 240.0} ,  { -101.0 , 240.0} ,  { -96.0 , 240.0} ,  { -91.0 , 240.0} ,  { -86.0 , 240.0} ,  { -81.0 , 240.0} ,  { -76.0 , 240.0} ,  { -71.0 , 240.0} ,  { -66.0 , 240.0} ,  { -61.0 , 240.0} ,  { -56.0 , 240.0} ,  { -51.0 , 240.0} ,  { -46.0 , 240.0} ,  { -41.0 , 240.0} ,  { -36.0 , 240.0} ,  { -31.0 , 240.0} ,  { -26.0 , 240.0} ,  { -21.0 , 240.0} ,  { -16.0 , 240.0} ,  { -11.0 , 240.0} ,  { -6.0 , 240.0} ,  { -1.0 , 240.0} ,  { 4.0 , 240.0} ,  { 9.0 , 240.0} ,  { 14.0 , 240.0} ,  { 19.0 , 240.0} ,  { 24.0 , 240.0} ,  { 29.0 , 240.0} ,  { 34.0 , 240.0} ,  { 39.0 , 240.0} ,  { 44.0 , 240.0} ,  { 49.0 , 240.0} ,  { 54.0 , 240.0} ,  { 59.0 , 240.0} ,  { 64.0 , 240.0} ,  { 69.0 , 240.0} ,  { 74.0 , 240.0} ,  { 79.0 , 240.0} ,  { 84.0 , 240.0} ,  { 89.0 , 240.0} ,  { 94.0 , 240.0} ,  { 99.0 , 240.0} ,  { 104.0 , 240.0} ,  { 109.0 , 240.0} ,  { 114.0 , 240.0} ,  { 119.0 , 240.0} ,  { 124.0 , 240.0} ,  { 129.0 , 240.0} ,  { 134.0 , 240.0} ,  { 139.0 , 240.0} ,  { 144.0 , 240.0} ,  { 149.0 , 240.0} ,  { 154.0 , 240.0} ,  { 159.0 , 240.0} ,  { 164.0 , 240.0} ,  { 169.0 , 240.0} ,  { 174.0 , 240.0} ,  { 179.0 , 240.0} ,  { 184.0 , 240.0} ,  { 189.0 , 240.0} ,  { 194.0 , 240.0} ,  { 199.0 , 240.0} ,  { 204.0 , 240.0} ,  { 209.0 , 240.0} ,  { 214.0 , 240.0} ,  { 219.0 , 240.0} ,  { 224.0 , 240.0} ,  { 229.0 , 240.0} ,  { 234.0 , 240.0} ,  { 239.0 , 240.0} ,  { 244.0 , 240.0} ,  { 249.0 , 240.0} ,  { 254.0 , 240.0} ,  { 259.0 , 240.0} ,  { 264.0 , 240.0} ,  { 269.0 , 240.0} ,  { 274.0 , 240.0} ,  { 279.0 , 240.0} ,  { 284.0 , 240.0} ,  { 289.0 , 240.0} ,  { 294.0 , 240.0} ,  { 299.0 , 240.0} ,  { 304.0 , 240.0} ,  { 309.0 , 240.0} ,  { 314.0 , 240.0} ,  { 319.0 , 240.0} ,  { -81.0 , 225.0} ,  { -81.0 , 220.0} ,  { -81.0 , 215.0} ,  { -81.0 , 210.0} ,  { -81.0 , 215.0} ,  { -81.0 , 220.0} ,  { -81.0 , 225.0} ,  { -81.0 , 230.0} ,  { -81.0 , 235.0} ,  { -81.0 , 240.0} ,{ 319.0 , 240.0} ,  { 314.0 , 240.0} ,  { 309.0 , 240.0} ,  { 304.0 , 240.0} ,  { 299.0 , 240.0} ,  { 294.0 , 240.0} ,  { 289.0 , 240.0} ,  { 284.0 , 240.0} ,  { 279.0 , 240.0} ,  { 274.0 , 240.0} ,  { 269.0 , 240.0} ,  { 264.0 , 240.0} ,  { 259.0 , 240.0} ,  { 254.0 , 240.0} ,  { 249.0 , 240.0} ,  { 244.0 , 240.0} ,  { 239.0 , 240.0} ,  { 234.0 , 240.0} ,  { 229.0 , 240.0} ,  { 224.0 , 240.0} ,  { 219.0 , 240.0} ,  { 214.0 , 240.0} ,  { 209.0 , 240.0} ,  { 204.0 , 240.0} ,  { 199.0 , 240.0} ,  { 194.0 , 240.0} ,  { 189.0 , 240.0} ,  { 184.0 , 240.0} ,  { 179.0 , 240.0} ,  { 174.0 , 240.0} ,  { 169.0 , 240.0} ,  { 164.0 , 240.0} ,  { 159.0 , 240.0} ,  { 154.0 , 240.0} ,  { 149.0 , 240.0} ,  { 144.0 , 240.0} ,  { 139.0 , 240.0} ,  { 134.0 , 240.0} ,  { 129.0 , 240.0} ,  { 124.0 , 240.0} ,  { 119.0 , 240.0} ,  { 114.0 , 240.0} ,  { 109.0 , 240.0} ,  { 104.0 , 240.0} ,  { 99.0 , 240.0} ,  { 94.0 , 240.0} ,  { 89.0 , 240.0} ,  { 84.0 , 240.0} ,  { 79.0 , 240.0} ,  { 74.0 , 240.0} ,  { 69.0 , 240.0} ,  { 64.0 , 240.0} ,  { 59.0 , 240.0} ,  { 54.0 , 240.0} ,  { 49.0 , 240.0} ,  { 44.0 , 240.0} ,  { 39.0 , 240.0} ,  { 34.0 , 240.0} ,  { 29.0 , 240.0} ,  { 24.0 , 240.0} ,  { 19.0 , 240.0} ,  { 14.0 , 240.0} ,  { 9.0 , 240.0} ,  { 4.0 , 240.0} ,  { -1.0 , 240.0} ,  { -6.0 , 240.0} ,  { -11.0 , 240.0} ,  { -16.0 , 240.0} ,  { -21.0 , 240.0} ,  { -26.0 , 240.0} ,  { -31.0 , 240.0} ,  { -36.0 , 240.0} ,  { -41.0 , 240.0} ,  { -46.0 , 240.0} ,  { -51.0 , 240.0} ,  { -56.0 , 240.0} ,  { -61.0 , 240.0} ,  { -66.0 , 240.0} ,  { -71.0 , 240.0} ,  { -76.0 , 240.0} ,  { -81.0 , 240.0} ,  { -86.0 , 240.0} ,  { -91.0 , 240.0} ,  { -96.0 , 240.0} ,  { -101.0 , 240.0} ,  { -106.0 , 240.0} ,  { -111.0 , 240.0} ,  { -116.0 , 240.0} ,  { -121.0 , 240.0} ,  { -126.0 , 240.0} ,  { -131.0 , 240.0} ,  { -136.0 , 240.0} ,  { -141.0 , 240.0} ,  { -146.0 , 240.0} ,  { -151.0 , 240.0} ,  { -156.0 , 240.0} ,  { -161.0 , 240.0} ,{ -161.0 , 235.0} ,  { -161.0 , 230.0} ,  { -161.0 , 225.0} ,  { -161.0 , 220.0} ,  { -161.0 , 215.0} ,  { -161.0 , 210.0} ,  { -161.0 , 205.0} ,  { -161.0 , 200.0} ,  { -161.0 , 195.0} ,  { -161.0 , 190.0} ,  { -161.0 , 185.0} ,  { -161.0 , 180.0} ,  { -161.0 , 175.0} ,  { -161.0 , 170.0} ,  { -161.0 , 165.0} ,  { -161.0 , 160.0} ,  { -161.0 , 155.0} ,  { -161.0 , 150.0} ,  { -161.0 , 145.0} ,  { -161.0 , 140.0} ,  { -161.0 , 135.0} ,  { -161.0 , 130.0} ,  { -161.0 , 125.0} ,  { -161.0 , 120.0} ,  { -161.0 , 115.0} ,  { -161.0 , 110.0} ,  { -161.0 , 105.0} ,  { -161.0 , 100.0} ,  { -161.0 , 95.0} ,  { -161.0 , 90.0} ,  { -161.0 , 85.0} ,  { -161.0 , 80.0} ,  { -161.0 , 75.0} ,  { -161.0 , 70.0} ,  { -161.0 , 65.0} ,  { -161.0 , 60.0} ,  { -161.0 , 55.0} ,  { -161.0 , 50.0} ,  { -161.0 , 45.0} ,  { -161.0 , 40.0} ,  { -161.0 , 35.0} ,  { -161.0 , 30.0} ,  { -161.0 , 25.0} ,  { -161.0 , 20.0} ,  { -161.0 , 15.0} ,  { -161.0 , 10.0} ,  { -161.0 , 5.0} ,  { -161.0 , 0.0} ,  { -161.0 , -5.0} ,  { -161.0 , -10.0} ,  { -161.0 , -15.0} ,  { -161.0 , -20.0} ,  { -161.0 , -25.0} ,  { -161.0 , -30.0} ,  { -161.0 , -35.0} ,  { -161.0 , -40.0} ,  { -161.0 , -45.0} ,  { -161.0 , -50.0} ,  { -161.0 , -55.0} ,  { -161.0 , -60.0} ,  { -161.0 , -65.0} ,  { -161.0 , -70.0} ,  { -161.0 , -75.0} ,  { -161.0 , -80.0} ,  { -161.0 , -85.0} ,  { -161.0 , -90.0} ,  { -161.0 , -95.0} ,  { -161.0 , -100.0} ,  { -161.0 , -105.0} ,  { -161.0 , -110.0} ,  { -161.0 , -115.0} ,  { -161.0 , -120.0} , { -121.0 , -95.0} ,  { -121.0 , -90.0} ,  { -121.0 , -85.0} ,  { -121.0 , -80.0} ,  { -121.0 , -75.0} ,  { -121.0 , -70.0} ,  { -121.0 , -65.0} ,  { -121.0 , -60.0} ,  { -121.0 , -55.0} ,  { -121.0 , -50.0} ,  { -121.0 , -45.0} ,  { -121.0 , -40.0} ,  { -121.0 , -35.0} ,  { -121.0 , -30.0} ,  { -121.0 , -25.0} ,  { -121.0 , -20.0} ,  { -121.0 , -15.0} ,  { -121.0 , -10.0} ,  { -121.0 , -5.0} ,  { -121.0 , 0.0} ,  { -121.0 , 5.0} ,  { -121.0 , 10.0} ,  { -121.0 , 15.0} ,  { -121.0 , 20.0} ,  { -121.0 , 25.0} ,  { -121.0 , 30.0} ,  { -121.0 , 35.0} ,  { -121.0 , 40.0} ,  { -121.0 , 45.0} ,  { -121.0 , 50.0} ,  { -121.0 , 55.0} ,  { -121.0 , 60.0} ,  { -121.0 , 65.0} ,  { -121.0 , 70.0} ,  { -121.0 , 75.0} ,  { -121.0 , 80.0} ,  { -121.0 , 85.0} ,  { -121.0 , 90.0} ,{ -121.0 , 190.0} ,  { -121.0 , 185.0} ,  { -121.0 , 180.0} ,  { -121.0 , 175.0} ,  { -121.0 , 170.0} ,  { -121.0 , 165.0} ,  { -121.0 , 160.0} ,  { -121.0 , 155.0} ,  { -121.0 , 150.0} ,  { -121.0 , 145.0} ,  { -121.0 , 140.0} ,  { -121.0 , 135.0} ,  { -121.0 , 130.0} ,  { -121.0 , 125.0} ,  { -121.0 , 120.0},{ -121.0 , 180.0} ,  { -116.0 , 180.0} ,  { -111.0 , 180.0} ,  { -106.0 , 180.0} ,  { -101.0 , 180.0} ,  { -96.0 , 180.0} ,  { -91.0 , 180.0} ,  { -86.0 , 180.0} ,  { -81.0 , 180.0} ,  { -76.0 , 180.0} ,  { -71.0 , 180.0} ,  { -66.0 , 180.0} ,  { -61.0 , 180.0} ,  { -56.0 , 180.0} ,  { -51.0 , 180.0} ,  { -46.0 , 180.0} ,  { -41.0 , 180.0}

            ,  { -156.0 , -120.0} ,  { -151.0 , -120.0} ,  { -146.0 , -120.0} ,  { -141.0 , -120.0} ,  { -136.0 , -120.0} ,  { -131.0 , -120.0} ,  { -126.0 , -120.0} ,  { -121.0 , -120.0} ,  { -116.0 , -120.0} ,  { -111.0 , -120.0} ,  { -106.0 , -120.0} ,  { -101.0 , -120.0} ,  { -96.0 , -120.0} ,  { -91.0 , -120.0} ,  { -86.0 , -120.0} ,  { -81.0 , -120.0} ,  { -76.0 , -120.0} ,  { -71.0 , -120.0} ,  { -66.0 , -120.0} ,  { -61.0 , -120.0} ,  { -56.0 , -120.0} ,  { -51.0 , -120.0} ,  { -46.0 , -120.0} ,  { -41.0 , -120.0} ,  { -36.0 , -120.0} ,  { -31.0 , -120.0} ,  { -26.0 , -120.0} ,  { -21.0 , -120.0} ,  { -16.0 , -120.0} ,  { -11.0 , -120.0} ,  { -6.0 , -120.0} ,  { -1.0 , -120.0} ,  { 4.0 , -120.0} ,  { 9.0 , -120.0} ,  { 14.0 , -120.0} ,  { 19.0 , -120.0} ,  { 24.0 , -120.0} ,  { 29.0 , -120.0} ,  { 34.0 , -120.0} ,  { 39.0 , -120.0} ,  { 44.0 , -120.0} ,  { 49.0 , -120.0} ,  { 54.0 , -120.0} ,  { 59.0 , -120.0} ,  { 64.0 , -120.0} ,  { 69.0 , -120.0} ,  { 74.0 , -120.0} ,  { 79.0 , -120.0} ,  { 84.0 , -120.0} ,  { 89.0 , -120.0} ,  { 94.0 , -120.0} ,  { 99.0 , -120.0} ,  { 104.0 , -120.0} ,  { 109.0 , -120.0} ,  { 114.0 , -120.0} ,  { 119.0 , -120.0} ,  { 124.0 , -120.0} ,  { 129.0 , -120.0} ,  { 134.0 , -120.0} ,  { 139.0 , -120.0} ,  { 144.0 , -120.0} ,  { 149.0 , -120.0} ,  { 154.0 , -120.0} ,  { 159.0 , -120.0} ,  { 164.0 , -120.0} ,  { 169.0 , -120.0} ,  { 174.0 , -120.0} ,  { 179.0 , -120.0} ,  { 184.0 , -120.0} ,  { 189.0 , -120.0} ,  { 194.0 , -120.0} ,  { 199.0 , -120.0} ,  { 204.0 , -120.0} ,  { 209.0 , -120.0} ,  { 214.0 , -120.0} ,  { 219.0 , -120.0} ,  { 224.0 , -120.0} ,  { 229.0 , -120.0} ,  { 234.0 , -120.0} ,  { 239.0 , -120.0} ,  { 244.0 , -120.0} ,  { 249.0 , -120.0} ,  { 254.0 , -120.0} ,  { 259.0 , -120.0} ,  { 264.0 , -120.0} ,  { 269.0 , -120.0} ,  { 274.0 , -120.0} ,  { 279.0 , -120.0} ,  { 284.0 , -120.0} ,  { 289.0 , -120.0} ,  { 294.0 , -120.0} ,  { 299.0 , -120.0} ,  { 304.0 , -120.0} ,  { 309.0 , -120.0} ,  { 314.0 , -120.0} ,  { 319.0 , -120.0} ,
            { -41.0 , 215.0} ,  { -41.0 , 210.0} ,  { -41.0 , 205.0} ,  { -41.0 , 200.0} ,  { -41.0 , 195.0} ,  { -41.0 , 190.0} ,  { -41.0 , 185.0} ,  { -41.0 , 180.0} ,  { -41.0 , 175.0} ,  { -41.0 , 170.0} ,  { -41.0 , 165.0} ,  { -41.0 , 160.0} ,  { -41.0 , 155.0} ,  { -41.0 , 150.0}, { -36.0 , 210.0} ,  { -31.0 , 210.0} ,  { -26.0 , 210.0} ,  { -21.0 , 210.0} ,  { -16.0 , 210.0} ,  { -11.0 , 210.0} ,  { -6.0 , 210.0} ,  { -1.0 , 210.0} ,  { 4.0 , 210.0} ,  { 9.0 , 210.0} ,  { 14.0 , 210.0} ,  { 19.0 , 210.0} ,  { 24.0 , 210.0} ,  { 29.0 , 210.0} ,  { 34.0 , 210.0} ,  { 39.0 , 210.0} , { 79.0 , 235.0} ,  { 79.0 , 230.0} ,  { 79.0 , 225.0} ,  { 79.0 , 220.0} ,  { 79.0 , 215.0} ,  { 79.0 , 210.0} ,  { 79.0 , 205.0} ,  { 79.0 , 200.0} ,  { 79.0 , 195.0} ,  { 79.0 , 190.0} ,  { 79.0 , 185.0} ,  { 79.0 , 180.0} ,  { 79.0 , 175.0} ,  { 79.0 , 170.0} ,  { 79.0 , 165.0} ,  { 79.0 , 160.0} ,  { 79.0 , 155.0} ,  { 79.0 , 150.0} ,  { 79.0 , 145.0} ,  { 79.0 , 140.0} ,  { 79.0 , 135.0} ,  { 79.0 , 130.0} ,  { 79.0 , 125.0} ,  { 79.0 , 120.0} ,  { 79.0 , 115.0} ,  { 79.0 , 110.0} ,  { 79.0 , 105.0} ,  { 79.0 , 100.0} ,  { 79.0 , 95.0} ,  { 79.0 , 90.0} ,  { 79.0 , 85.0} ,  { 79.0 , 80.0} ,  { 79.0 , 75.0} ,  { 79.0 , 70.0} ,  { 79.0 , 65.0} ,  { 79.0 , 60.0} ,  { 79.0 , 55.0} ,  { 79.0 , 50.0} ,  { 79.0 , 45.0} ,  { 79.0 , 40.0} ,  { 79.0 , 35.0} ,  { 79.0 , 30.0} ,  { 79.0 , 25.0} ,  { 79.0 , 20.0} ,  { 79.0 , 15.0} ,  { 79.0 , 10.0} ,  { 79.0 , 5.0} ,  { 79.0 , 0.0} ,  { 79.0 , -5.0} ,  { 79.0 , -10.0} ,  { 79.0 , -15.0} ,  { 79.0 , -20.0} ,  { 79.0 , -25.0} ,  { 79.0 , -30.0} , { -116.0 , 120.0} ,  { -111.0 , 120.0} ,  { -106.0 , 120.0} ,  { -101.0 , 120.0} ,  { -96.0 , 120.0} ,  { -91.0 , 120.0} ,  { -86.0 , 120.0} ,  { -81.0 , 120.0} ,  { -76.0 , 120.0} ,  { -71.0 , 120.0} ,  { -66.0 , 120.0} ,  { -61.0 , 120.0} ,  { -56.0 , 120.0} ,  { -51.0 , 120.0} ,  { -46.0 , 120.0} ,  { -41.0 , 120.0} ,  { -41.0 , 115.0} ,  { -41.0 , 110.0} ,  { -41.0 , 105.0} ,  { -41.0 , 100.0} ,  { -41.0 , 95.0} ,  { -41.0 , 90.0} ,  { -41.0 , 85.0} ,  { -41.0 , 80.0} ,  { -41.0 , 75.0} ,  { -41.0 , 70.0} ,  { -41.0 , 65.0} ,  { -41.0 , 60.0}, { -81.0 , 115.0} ,  { -81.0 , 110.0} ,  { -81.0 , 105.0} ,  { -81.0 , 100.0} ,  { -81.0 , 95.0} ,  { -81.0 , 90.0} ,  { -81.0 , 85.0} ,  { -81.0 , 80.0} ,  { -81.0 , 75.0} ,  { -81.0 , 70.0} ,  { -81.0 , 65.0} ,  { -81.0 , 60.0} ,  { -81.0 , 55.0} ,  { -81.0 , 50.0} ,  { -81.0 , 45.0} ,  { -81.0 , 40.0} ,  { -81.0 , 35.0} ,  { -81.0 , 30.0} ,  { -76.0 , 30.0} ,  { -71.0 , 30.0} ,  { -66.0 , 30.0} ,  { -61.0 , 30.0} ,  { -56.0 , 30.0} ,  { -51.0 , 30.0} ,  { -46.0 , 30.0} ,  { -41.0 , 30.0} ,  { -41.0 , 25.0} ,  { -41.0 , 20.0} ,  { -41.0 , 15.0} ,  { -41.0 , 10.0} ,  { -41.0 , 5.0} ,  { -41.0 , 0.0} ,  { -41.0 , -5.0} ,  { -41.0 , -10.0} ,  { -41.0 , -15.0} ,  { -41.0 , -20.0} ,  { -41.0 , -25.0} ,  { -41.0 , -30.0} ,  { -41.0 , -35.0} ,  { -41.0 , -40.0} ,  { -41.0 , -45.0} ,  { -41.0 , -50.0} ,  { -41.0 , -55.0} ,  { -41.0 , -60.0} ,  { -41.0 , -65.0} ,  { -41.0 , -70.0} ,  { -41.0 , -75.0} ,  { -41.0 , -80.0} ,  { -41.0 , -85.0} ,  { -41.0 , -90.0} ,  { -41.0 , -95.0} ,  { -41.0 , -100.0} ,  { -41.0 , -105.0} ,  { -41.0 , -110.0} ,  { -41.0 , -115.0},{ -136.0 , 0.0} ,  { -131.0 , 0.0} ,  { -126.0 , 0.0} ,  { -121.0 , 0.0} ,  { -121.0 , 0.0} ,  { -131.0 , 0.0} ,  { -136.0 , 0.0} ,  { -141.0 , 0.0} ,  { -146.0 , 0.0} ,  { -151.0 , 0.0} ,  { -156.0 , 0.0},{ -76.0 , 0.0} ,  { -81.0 , 0.0} ,  { -86.0 , 0.0} ,  { -91.0 , 0.0} ,  { -96.0 , 0.0} ,  { -101.0 , 0.0} ,  { -106.0 , 0.0} ,  { -111.0 , 0.0} ,  { -116.0 , 0.0} ,  { -121.0 , 0.0} ,  { -81.0 , -30.0} ,  { -86.0 , -30.0} ,  { -91.0 , -30.0} ,  { -96.0 , -30.0} ,  { -101.0 , -30.0} ,  { -106.0 , -30.0} ,  { -111.0 , -30.0} ,  { -116.0 , -30.0} ,  { -121.0 , -30.0},{ 39.0 , 180.0} ,  { 34.0 , 180.0} ,  { 29.0 , 180.0} ,  { 24.0 , 180.0} ,  { 19.0 , 180.0} ,  { 14.0 , 180.0} ,  { 9.0 , 180.0} ,  { 4.0 , 180.0} ,  { -1.0 , 180.0} ,  { -1.0 , 175.0} ,  { -1.0 , 170.0} ,  { -1.0 , 165.0} ,  { -1.0 , 160.0} ,  { -1.0 , 155.0} ,  { -1.0 , 150.0} ,  { -1.0 , 145.0} ,  { -1.0 , 140.0} ,  { -1.0 , 135.0} ,  { -1.0 , 130.0} ,  { -1.0 , 125.0} ,  { -1.0 , 120.0} ,  { -1.0 , 115.0} ,  { -1.0 , 110.0} ,  { -1.0 , 105.0} ,  { -1.0 , 100.0} ,  { -1.0 , 95.0} ,  { -1.0 , 90.0} ,  { -1.0 , 85.0} ,  { -1.0 , 80.0} ,  { -1.0 , 75.0} ,  { -1.0 , 70.0} ,  { -1.0 , 65.0} ,  { -1.0 , 60.0} ,  { -1.0 , 55.0} ,  { -1.0 , 50.0} ,  { -1.0 , 45.0} ,  { -1.0 , 40.0} ,  { -1.0 , 35.0} ,  { -1.0 , 30.0} ,  { -1.0 , 25.0} ,  { -1.0 , 20.0} ,  { -1.0 , 15.0} ,  { -1.0 , 10.0} ,  { -1.0 , 5.0} ,  { -1.0 , 0.0} ,  { -1.0 , -5.0} ,  { -1.0 , -10.0} ,  { -1.0 , -15.0} ,  { -1.0 , -20.0} ,  { -1.0 , -25.0} ,  { -1.0 , -30.0} ,  { -1.0 , -35.0} ,  { -1.0 , -40.0} ,  { -1.0 , -45.0} ,  { -1.0 , -50.0} ,  { -1.0 , -55.0} ,  { -1.0 , -60.0} ,  { -1.0 , -65.0} ,  { -1.0 , -70.0} ,  { -1.0 , -75.0} ,  { -1.0 , -80.0} ,  { -1.0 , -85.0} ,  { -1.0 , -90.0} ,  { -1.0 , -95.0} ,  { -1.0 , -100.0} ,  { -1.0 , -105.0} ,  { -1.0 , -110.0} ,  { -1.0 , -115.0} ,  { -1.0 , -120.0}, { -46.0 , 150.0} ,  { -51.0 , 150.0} ,  { -56.0 , 150.0} ,  { -61.0 , 150.0} ,  { -66.0 , 150.0} ,  { -71.0 , 150.0} ,  { -76.0 , 150.0},{ 39.0 , 150.0} ,  { 39.0 , 145.0} ,  { 39.0 , 140.0} ,  { 39.0 , 135.0} ,  { 39.0 , 130.0} ,  { 39.0 , 125.0} ,  { 39.0 , 120.0} ,  { 39.0 , 115.0} ,  { 39.0 , 110.0} ,  { 39.0 , 105.0} ,  { 39.0 , 100.0} ,  { 39.0 , 95.0} ,  { 39.0 , 90.0} ,  { 44.0 , 90.0} ,  { 49.0 , 90.0} ,  { 54.0 , 90.0} ,  { 59.0 , 90.0} ,  { 64.0 , 90.0} ,  { 69.0 , 90.0} ,  { 74.0 , 90.0} ,  { 79.0 , 90.0}, { 39.0 , 60.0} ,  { 39.0 , 55.0} ,  { 39.0 , 50.0} ,  { 39.0 , 45.0} ,  { 39.0 , 40.0} ,  { 39.0 , 35.0} ,  { 39.0 , 30.0} ,  { 39.0 , 25.0} ,  { 39.0 , 20.0} ,  { 39.0 , 15.0} ,  { 39.0 , 10.0} ,  { 39.0 , 5.0} ,  { 39.0 , 0.0} ,  { 39.0 , -5.0} ,  { 39.0 , -10.0} ,  { 39.0 , -15.0} ,  { 39.0 , -20.0} ,  { 39.0 , -25.0} ,  { 39.0 , -30.0} ,  { 39.0 , -35.0} ,  { 39.0 , -40.0} ,  { 39.0 , -45.0} ,  { 39.0 , -50.0} ,  { 39.0 , -55.0} ,  { 39.0 , -60.0} ,  { 39.0 , -65.0} ,  { 39.0 , -70.0} ,  { 39.0 , -75.0} ,  { 39.0 , -80.0} ,  { 39.0 , -85.0} ,  { 39.0 , -90.0} ,  { 39.0 , -95.0} ,  { 39.0 , -100.0} ,  { 39.0 , -105.0} ,  { 39.0 , -110.0} ,  { 39.0 , -115.0}, { 44.0 , -60.0} ,  { 49.0 , -60.0} ,  { 54.0 , -60.0} ,  { 59.0 , -60.0} ,  { 64.0 , -60.0} ,  { 69.0 , -60.0} ,  { 74.0 , -60.0} ,  { 79.0 , -60.0}, { 79.0 , -60.0} ,  { 79.0 , -60.0} ,  { 79.0 , -65.0} ,  { 79.0 , -70.0} ,  { 79.0 , -75.0} ,  { 79.0 , -80.0} ,  { 79.0 , -85.0} ,  { 79.0 , -90.0}, { 79.0 , -90.0} ,  { 79.0 , -90.0} ,  { 84.0 , -90.0} ,  { 89.0 , -90.0} ,  { 94.0 , -90.0} ,  { 99.0 , -90.0} ,  { 104.0 , -90.0} ,  { 109.0 , -90.0} ,  { 114.0 , -90.0} ,  { 119.0 , -90.0}, { 119.0 , -60.0} ,  { 119.0 , -55.0} ,  { 119.0 , -50.0} ,  { 119.0 , -45.0} ,  { 119.0 , -40.0} ,  { 119.0 , -35.0} ,  { 119.0 , -30.0} ,  { 119.0 , -25.0} ,  { 119.0 , -20.0} ,  { 119.0 , -15.0} ,  { 119.0 , -10.0} ,  { 119.0 , -5.0} ,  { 119.0 , 0.0} ,  { 119.0 , 5.0} ,  { 119.0 , 10.0} ,  { 119.0 , 15.0} ,  { 119.0 , 20.0} ,  { 119.0 , 25.0} ,  { 119.0 , 30.0} ,  { 119.0 , 35.0} ,  { 119.0 , 40.0} ,  { 119.0 , 45.0} ,  { 119.0 , 50.0} ,  { 119.0 , 55.0} ,  { 119.0 , 60.0},{ 124.0 , 0.0} ,  { 129.0 , 0.0} ,  { 134.0 , 0.0} ,  { 139.0 , 0.0} ,  { 144.0 , 0.0} ,  { 149.0 , 0.0} ,  { 154.0 , 0.0} ,  { 159.0 , 0.0},{ 159.0 , -30.0} ,  { 159.0 , -25.0} ,  { 159.0 , -20.0} ,  { 159.0 , -15.0} ,  { 159.0 , -10.0} ,  { 159.0 , -5.0} ,  { 159.0 , 0.0} ,  { 159.0 , 5.0} ,  { 159.0 , 10.0} ,  { 159.0 , 15.0} ,  { 159.0 , 20.0} ,  { 159.0 , 25.0} ,  { 159.0 , 30.0} ,  { 159.0 , 35.0} ,  { 159.0 , 40.0} ,  { 159.0 , 45.0} ,  { 159.0 , 50.0} ,  { 159.0 , 55.0} ,  { 159.0 , 60.0},
            { -81.0 , -115.0} ,  { -81.0 , -110.0} ,  { -81.0 , -105.0} ,  { -81.0 , -100.0} ,  { -81.0 , -95.0} ,  { -81.0 , -90.0} ,  { -81.0 , -85.0} ,  { -81.0 , -80.0} ,  { -81.0 , -75.0} ,  { -81.0 , -70.0} ,  { -81.0 , -65.0} ,  { -81.0 , -60.0}, { 124.0 , -60.0} ,  { 129.0 , -60.0} ,  { 134.0 , -60.0} ,  { 139.0 , -60.0} ,  { 144.0 , -60.0} ,  { 149.0 , -60.0} ,  { 154.0 , -60.0} ,  { 159.0 , -60.0},{ 159.0 , -60.0} ,  { 159.0 , -60.0} ,  { 159.0 , -65.0} ,  { 159.0 , -70.0} ,  { 159.0 , -75.0} ,  { 159.0 , -80.0} ,  { 159.0 , -85.0} ,  { 159.0 , -90.0} ,  { 159.0 , -95.0} ,  { 159.0 , -100.0} ,  { 159.0 , -105.0} ,  { 159.0 , -110.0} ,  { 159.0 , -115.0}, { 199.0 , -90.0} ,  { 199.0 , -85.0} ,  { 199.0 , -80.0} ,  { 199.0 , -75.0} ,  { 199.0 , -70.0} ,  { 199.0 , -65.0} ,  { 199.0 , -60.0} ,  { 199.0 , -55.0} ,  { 199.0 , -50.0} ,  { 199.0 , -45.0} ,  { 199.0 , -40.0} ,  { 199.0 , -35.0} ,  { 199.0 , -30.0} ,  { 199.0 , -25.0} ,  { 199.0 , -20.0} ,  { 199.0 , -15.0} ,  { 199.0 , -10.0} ,  { 199.0 , -5.0} ,  { 199.0 , 0.0} ,  { 199.0 , 5.0} ,  { 199.0 , 10.0} ,  { 199.0 , 15.0} ,  { 199.0 , 20.0} ,  { 199.0 , 25.0} ,  { 199.0 , 30.0} ,  { 199.0 , 35.0} ,  { 199.0 , 40.0} ,  { 199.0 , 45.0} ,  { 199.0 , 50.0} ,  { 199.0 , 55.0} ,  { 199.0 , 60.0}, { 84.0 , 120.0} ,  { 89.0 , 120.0} ,  { 94.0 , 120.0} ,  { 99.0 , 120.0} ,  { 104.0 , 120.0} ,  { 109.0 , 120.0} ,  { 114.0 , 120.0} ,  { 119.0 , 120.0}, { 119.0 , 120.0} ,  { 119.0 , 120.0} ,  { 119.0 , 125.0} ,  { 119.0 , 130.0} ,  { 119.0 , 135.0} ,  { 119.0 , 140.0} ,  { 119.0 , 145.0} ,  { 119.0 , 150.0} ,  { 119.0 , 155.0} ,  { 119.0 , 160.0} ,  { 119.0 , 165.0} ,  { 119.0 , 170.0} ,  { 119.0 , 175.0} ,  { 119.0 , 180.0} ,  { 119.0 , 185.0} ,  { 119.0 , 190.0} ,  { 119.0 , 195.0} ,  { 119.0 , 200.0} ,  { 119.0 , 205.0} ,  { 119.0 , 210.0},  { 119.0 , 90.0} ,  { 124.0 , 90.0} ,  { 129.0 , 90.0} ,  { 134.0 , 90.0} ,  { 139.0 , 90.0} ,  { 144.0 , 90.0} ,  { 149.0 , 90.0} ,  { 154.0 , 90.0} ,  { 159.0 , 90.0} ,  { 164.0 , 90.0} ,  { 169.0 , 90.0} ,  { 174.0 , 90.0} ,  { 179.0 , 90.0} ,  { 184.0 , 90.0} ,  { 189.0 , 90.0} ,  { 194.0 , 90.0} ,  { 199.0 , 90.0}, { 159.0 , 95.0} ,  { 159.0 , 100.0} ,  { 159.0 , 105.0} ,  { 159.0 , 110.0} ,  { 159.0 , 115.0} ,  { 159.0 , 120.0} ,  { 159.0 , 125.0} ,  { 159.0 , 130.0} ,  { 159.0 , 135.0} ,  { 159.0 , 140.0} ,  { 159.0 , 145.0} ,  { 159.0 , 150.0} ,  { 159.0 , 155.0} ,  { 159.0 , 160.0} ,  { 159.0 , 165.0} ,  { 159.0 , 170.0} ,  { 159.0 , 175.0} ,  { 159.0 , 180.0} ,  { 159.0 , 185.0} ,  { 159.0 , 190.0} ,  { 159.0 , 195.0} ,  { 159.0 , 200.0} ,  { 159.0 , 205.0} ,  { 159.0 , 210.0} ,  { 159.0 , 215.0} ,  { 159.0 , 220.0} ,  { 159.0 , 225.0} ,  { 159.0 , 230.0} ,  { 159.0 , 235.0} ,  { 159.0 , 240.0},  { 159.0 , 120.0} ,  { 164.0 , 120.0} ,  { 169.0 , 120.0} ,  { 174.0 , 120.0} ,  { 179.0 , 120.0} ,  { 184.0 , 120.0} ,  { 189.0 , 120.0} ,  { 194.0 , 120.0} ,  { 199.0 , 120.0} ,  { 204.0 , 120.0} ,  { 204.0 , 125.0} ,  { 204.0 , 130.0} ,  { 204.0 , 135.0} ,  { 204.0 , 140.0} ,  { 204.0 , 145.0} ,  { 204.0 , 150.0} ,  { 204.0 , 155.0} ,  { 204.0 , 160.0} ,  { 204.0 , 165.0} ,  { 204.0 , 170.0} ,  { 204.0 , 175.0} ,  { 204.0 , 180.0} ,  { 204.0 , 185.0} ,  { 204.0 , 190.0} ,  { 204.0 , 195.0} ,  { 204.0 , 200.0} ,  { 204.0 , 205.0} ,  { 204.0 , 210.0}, { 239.0 , 210.0} ,  { 239.0 , 215.0} ,  { 239.0 , 220.0} ,  { 239.0 , 225.0} ,  { 239.0 , 230.0} ,  { 239.0 , 235.0} ,  { 239.0 , 240.0}, { 244.0 , 150.0} ,  { 244.0 , 155.0} ,  { 244.0 , 160.0} ,  { 244.0 , 165.0} ,  { 244.0 , 170.0} ,  { 244.0 , 175.0} ,  { 244.0 , 180.0} ,  { 239.0 , 180.0} ,  { 234.0 , 180.0} ,  { 229.0 , 180.0} ,  { 224.0 , 180.0} ,  { 219.0 , 180.0} ,  { 214.0 , 180.0} ,  { 209.0 , 180.0} ,  { 204.0 , 180.0} ,  { 204.0 , 180.0} ,  { 204.0 , 180.0}, { 279.0 , 210.0} ,  { 279.0 , 205.0} ,  { 279.0 , 200.0} ,  { 279.0 , 195.0} ,  { 279.0 , 190.0} ,  { 279.0 , 185.0} ,  { 279.0 , 180.0} ,  { 279.0 , 175.0} ,  { 279.0 , 170.0} ,  { 279.0 , 165.0} ,  { 279.0 , 160.0} ,  { 279.0 , 155.0} ,  { 279.0 , 150.0} ,  { 279.0 , 145.0} ,  { 279.0 , 140.0} ,  { 279.0 , 135.0} ,  { 279.0 , 130.0} ,  { 279.0 , 125.0} ,  { 279.0 , 120.0} ,  { 279.0 , 115.0} ,  { 279.0 , 110.0} ,  { 279.0 , 105.0} ,  { 279.0 , 100.0} ,  { 279.0 , 95.0} ,  { 279.0 , 90.0} ,  { 284.0 , 90.0} ,  { 289.0 , 90.0} ,  { 294.0 , 90.0} ,  { 299.0 , 90.0} ,  { 304.0 , 90.0} ,  { 309.0 , 90.0} ,  { 314.0 , 90.0} ,  { 319.0 , 90.0},{ 279.0 , 60.0} ,  { 279.0 , 65.0} ,  { 279.0 , 70.0} ,  { 279.0 , 75.0} ,  { 279.0 , 80.0} ,  { 279.0 , 85.0} ,  { 279.0 , 90.0} ,  { 274.0 , 90.0} ,  { 269.0 , 90.0} ,  { 264.0 , 90.0} ,  { 259.0 , 90.0} ,  { 254.0 , 90.0} ,  { 249.0 , 90.0} ,  { 244.0 , 90.0} ,  { 239.0 , 90.0},  { 239.0 , 120.0} ,  { 239.0 , 115.0} ,  { 239.0 , 110.0} ,  { 239.0 , 105.0} ,  { 239.0 , 100.0} ,  { 239.0 , 95.0} ,  { 239.0 , 90.0} ,  { 239.0 , 85.0} ,  { 239.0 , 80.0} ,  { 239.0 , 75.0} ,  { 239.0 , 70.0} ,  { 239.0 , 65.0} ,  { 239.0 , 60.0} ,  { 239.0 , 55.0} ,  { 239.0 , 50.0} ,  { 239.0 , 45.0} ,  { 239.0 , 40.0} ,  { 239.0 , 35.0} ,  { 239.0 , 30.0} ,  { 239.0 , 25.0} ,  { 239.0 , 20.0} ,  { 239.0 , 15.0} ,  { 239.0 , 10.0} ,  { 239.0 , 5.0} ,  { 239.0 , 0.0} ,  { 239.0 , -5.0} ,  { 239.0 , -10.0} ,  { 239.0 , -15.0} ,  { 239.0 , -20.0} ,  { 239.0 , -25.0} ,  { 239.0 , -30.0} ,  { 239.0 , -35.0} ,  { 239.0 , -40.0} ,  { 239.0 , -45.0} ,  { 239.0 , -50.0} ,  { 239.0 , -55.0} ,  { 239.0 , -60.0} ,  { 239.0 , -65.0} ,  { 239.0 , -70.0} ,  { 239.0 , -75.0} ,  { 239.0 , -80.0} ,  { 239.0 , -85.0} ,  { 239.0 , -90.0}, { 279.0 , 30.0} ,  { 279.0 , 25.0} ,  { 279.0 , 20.0} ,  { 279.0 , 15.0} ,  { 279.0 , 10.0} ,  { 279.0 , 5.0} ,  { 279.0 , 0.0} ,  { 279.0 , -5.0} ,  { 279.0 , -10.0} ,  { 279.0 , -15.0} ,  { 279.0 , -20.0} ,  { 279.0 , -25.0} ,  { 279.0 , -30.0} ,  { 279.0 , -35.0} ,  { 279.0 , -40.0} ,  { 279.0 , -45.0} ,  { 279.0 , -50.0} ,  { 279.0 , -55.0} ,  { 279.0 , -60.0} ,  { 279.0 , -65.0} ,  { 279.0 , -70.0} ,  { 279.0 , -75.0} ,  { 279.0 , -80.0} ,  { 279.0 , -85.0} ,  { 279.0 , -90.0} ,  { 279.0 , -95.0} ,  { 279.0 , -100.0} ,  { 279.0 , -105.0} ,  { 279.0 , -110.0} ,  { 279.0 , -115.0} ,  { 279.0 , -120.0} ,  { 279.0 , -120.0}, { 319.0 , -115.0} ,  { 319.0 , -110.0} ,  { 319.0 , -105.0} ,  { 319.0 , -100.0} ,  { 319.0 , -95.0} ,  { 319.0 , -90.0} ,  { 319.0 , -85.0} ,  { 319.0 , -80.0} ,  { 319.0 , -75.0} ,  { 319.0 , -70.0} ,  { 319.0 , -65.0} ,  { 319.0 , -60.0} ,  { 319.0 , -55.0} ,  { 319.0 , -50.0} ,  { 319.0 , -45.0} ,  { 319.0 , -40.0} ,  { 319.0 , -35.0} ,  { 319.0 , -30.0} ,  { 319.0 , -25.0} ,  { 319.0 , -20.0} ,  { 319.0 , -15.0} ,  { 319.0 , -10.0} ,  { 319.0 , -5.0} ,  { 319.0 , 0.0} ,  { 319.0 , 5.0} ,  { 319.0 , 10.0} ,  { 319.0 , 15.0} ,  { 319.0 , 20.0} ,  { 319.0 , 25.0} ,  { 319.0 , 30.0} ,  { 319.0 , 35.0} ,  { 319.0 , 40.0} ,  { 319.0 , 45.0} ,  { 319.0 , 50.0} ,  { 319.0 , 55.0} ,  { 319.0 , 60.0} ,  { 319.0 , 65.0} ,  { 319.0 , 70.0} ,  { 319.0 , 75.0} ,  { 319.0 , 80.0} ,  { 319.0 , 85.0} ,  { 319.0 , 90.0} ,  { 319.0 , 95.0} ,  { 319.0 , 100.0} ,  { 319.0 , 105.0} ,  { 319.0 , 110.0} ,  { 319.0 , 115.0} ,  { 319.0 , 120.0} ,  { 319.0 , 125.0} ,  { 319.0 , 130.0} ,  { 319.0 , 135.0} ,  { 319.0 , 140.0} ,  { 319.0 , 145.0} ,  { 319.0 , 150.0} ,  { 319.0 , 155.0} ,  { 319.0 , 160.0} ,  { 319.0 , 165.0} ,  { 319.0 , 170.0} ,  { 319.0 , 175.0} ,  { 319.0 , 180.0} ,  { 319.0 , 185.0} ,  { 319.0 , 190.0} ,  { 319.0 , 195.0} ,  { 319.0 , 200.0} ,  { 319.0 , 205.0} ,  { 319.0 , 210.0} ,  { 319.0 , 215.0} ,  { 319.0 , 220.0} ,  { 319.0 , 225.0} ,  { 319.0 , 230.0} ,  { 319.0 , 235.0} ,  { 319.0 , 240.0}, { 194.0 , 60.0} ,  { 189.0 , 60.0} ,  { 184.0 , 60.0} ,  { 179.0 , 60.0} ,  { 174.0 , 60.0} ,  { 169.0 , 60.0} ,  { 164.0 , 60.0}

    };



    public void maze(int n) {
        this.n = n;

    }




    @Override
    public void init(GLAutoDrawable gld) {
        GL gl = gld.getGL();
        GL glu = gld.getGL();
        gl.glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
        gl.glViewport(0, 0, 500, 300);
        gl.glMatrixMode(GL.GL_PROJECTION);
        gl.glLoadIdentity();
        glu.glOrtho(-350, 500, -200.0, 300, -5, 5);
        maze(12);
    }



    float red = 0.0f;
    float green = 0.5f;
    float blue = 0.0f;



    @Override
    public void display(GLAutoDrawable glad) {



        GL gl = glad.getGL();
        gl.glClear(GL.GL_COLOR_BUFFER_BIT);
        gl.glColor3f(red, green, blue);


        gl.glPushMatrix();
        gl.glScaled(40, 30, 0);

        gl.glTranslated(-5, -5, 0);
        gl.glBegin(GL.GL_LINES);
        for (int x = 1; x <= n; x++) {
            for (int y = 1; y <= n; y++) {
                if (south[x][y]) {
                    gl.glVertex2d((x), (y));
                    gl.glVertex2d((x + 1), (y));
                }
                if (north[x][y]) {
                    gl.glVertex2d((x), (y + 1));
                    gl.glVertex2d((x + 1), (y + 1));

                }
                if (west[x][y]) {
                    gl.glVertex2d((x), (y));
                    gl.glVertex2d((x), (y + 1));
                }
                if (east[x][y]) {
                    gl.glVertex2d((x + 1), (y));
                    gl.glVertex2d((x + 1), (y + 1));

                }
            }
        }

        gl.glEnd();
        gl.glPopMatrix();


//////////////////////////////// circle /////////////////
        int honka = 1;

        gl.glColor3f(1.0f, 0.7f, 0.75f);

        for (int i = 0; i < unAllowed_points.length; i++) {
            if (buffer_px == unAllowed_points[i][0] && buffer_py == unAllowed_points[i][1]) {
                honka = 0;
            }
        }
        for (int i = 0; i < 1; i++) {
            {
                System.out.print(" { " + buffer_px + " , " + buffer_py + '}' + " , ");
            }
        }
        //اول اما يلاقي الحاجز يوقف علطول
        if (honka == 0) {
            gl.glPushMatrix();
            buffer_px = px;
            buffer_py = py;

            gl.glTranslated(px, py, 0);

            double x, y;
            double radius = 5;
            gl.glBegin(GL.GL_POLYGON);
            for (double a = 0; a < THREE_SIXTY; a += ONE_DEGREE) {
                x = radius * (Math.cos(a));
                y = radius * (Math.sin(a));
                gl.glVertex2d(x, y);
            }
            gl.glEnd();
            gl.glPopMatrix();
            green = 0.0f;
            red = 1.0f;
            blue = 0.0f;
            counter-=5;
        }
        else {
            gl.glPushMatrix();
            px = buffer_px;
            py = buffer_py;

            gl.glTranslated(px, py, 0);

            double x, y;
            double radius = 5;
            gl.glBegin(GL.GL_POLYGON);
            for (double a = 0; a < THREE_SIXTY; a += ONE_DEGREE) {
                x = radius * (Math.cos(a));
                y = radius * (Math.sin(a));
                gl.glVertex2d(x, y);
            }
            gl.glEnd();
            gl.glPopMatrix();
            green = 0f;
            red = 0f;
            blue = 1f;


        }

        gl.glPushMatrix();

        drawCircle(gl, 3, Color.YELLOW, a, 109.0 , -106.0 );
        drawCircle(gl, 3, Color.YELLOW, c,  59.0 , 104.0);
        drawCircle(gl, 3, Color.YELLOW, d, 59.0 , -16.0 );
        drawCircle(gl, 3, Color.YELLOW, e , -16.0 , 14.0 );
        drawCircle(gl, 3, Color.YELLOW, f , 139.0 , 14.0 );

        drawCircle(gl, 3, Color.YELLOW, b, -141.0 , -16.0);
        drawCircle(gl, 3, Color.YELLOW, k, 29.0 , 104.0 );
        drawCircle(gl, 3, Color.YELLOW, l , -71.0 , 104.0 );
        drawCircle(gl, 3, Color.YELLOW, m, -66.0 , -40.0);
        drawCircle(gl, 3, Color.YELLOW, z1, 111.0 , -75.0 );
        drawCircle(gl, 3, Color.YELLOW, z2, 170.0 , 100.0 );
        drawCircle(gl, 3, Color.YELLOW, z3, 190.0 , -111.0 );
        drawCircle(gl, 3, Color.YELLOW, z4, -109.0 , -15.0 );
        drawCircle(gl, 3, Color.YELLOW, z5, 250.0 , 75.0 );
        drawCircle(gl, 3, Color.YELLOW, z6, 250.0 , -106.0 );
        drawCircle(gl, 3, Color.YELLOW, z7, 250.0 , -75.0 );
        drawCircle(gl, 3, Color.YELLOW, z8, 170.0 , 170.0 );
        drawCircle(gl, 3, Color.YELLOW, z9, -66.0 , 170.0 );
        drawCircle(gl, 3, Color.YELLOW, z10, 170.0 , 220.0 );
        drawCircle(gl, 3, Color.YELLOW, z11, -50.0 , 200.0 );




        gl.glEnd();
        gl.glPopMatrix();

        if (buffer_px == 109.0 && buffer_py == -106.0 && a==true ) {

            a= false ;
            counter+=10;
        }

        if (buffer_px ==  59.0 && buffer_py ==-104.0 && b==true ) {
            b=false ;
            counter+=10;

        }

        if (buffer_px == 59.0 && buffer_py ==-16.0 && c==true ) {
            c=false ;
            counter+=10;

        }

        if (buffer_px == -16.0 && buffer_py == 14.0 && d==true  ) {
            d=false ;
            counter+=10;
        }

        if (buffer_px == 139.0 && buffer_py == 14.0 && f==true  ) {
            f=false ;
            counter+=10;
        }

        if (buffer_px == -141.0&& buffer_py == -16.0 && e==true  ) {
            e=false ;
            counter+=10;
        }

        if (buffer_px == 29.0 && buffer_py == 104.0 && k==true  ) {
            k=false ;
            counter+=10;
        }

        if (buffer_px == -71.0  && buffer_py == 104.0 && l==true  ) {
            l=false ;
            counter+=10;
        }

        if (buffer_px == -66.0  && buffer_py == -16.0 && m==true  ) {
            m=false ;
            counter+=10;
        }
        if (buffer_px ==111.0 && buffer_py == -75.0 && z1==true  ) {
            z1=false ;
            counter+=10;
        }
        if (buffer_px ==170.0  && buffer_py ==100.0&& z2==true  ) {
            z2=false ;
            counter+=10;
        }
        if (buffer_px == 190.0 && buffer_py == -111.0  && z3==true  ) {
            z3=false ;
            counter+=10;
        }
        if (buffer_px == -109.0  && buffer_py ==-15.0 && z4==true  ) {
            z4=false ;
            counter+=10;
        }
        if (buffer_px ==250.0 && buffer_py ==75.0 && z5==true  ) {
            z5=false ;
            counter+=10;
        }
        if (buffer_px == 250.0 && buffer_py == -106.0 && z6==true  ) {
            z6=false ;
            counter+=10;
        }
        if (buffer_px == 250.0 && buffer_py == -75.0 && z7==true  ) {
            z7=false ;
            counter+=10;
        }
        if (buffer_px ==-66.0&& buffer_py == 170.0 && z8==true  ) {
            z8=false ;
            counter+=10;
        }
        if (buffer_px ==170.0&& buffer_py == 220.0  && z9==true  ) {
            z9=false ;
            counter+=10;
        }
        if (buffer_px == -50.0 && buffer_py == 200.0  && z10==true  ) {
            z10=false ;
            counter+=10;
        }


        //الكوره بتاعت النهاية
        gl.glPushMatrix();
        gl.glColor3f(1.0f, 0.0f, 1.0f);
        drawStar(gl, 15, true, 300, -106, angle+=9);
        gl.glEnd();
        gl.glPopMatrix();
//



//        if (px == 139.0 && py == -91.0 || px == 139.0 && py == -96.0 ||  px == 129.0 && py == -91.0 ||  px == 134.0 && py == -91.0  || px == 129.0 && py == -91.0 || px == 139.0 && py == -96.0 || px == 144.0 && py == -96.0  || px == 149.0 && py == -96.0 || px == 149.0 && py == -101.0   )
//        {
//            blue = 1.0f;
//            green = 0.0f;
//            red = 0.0f;
//            if (blue == 1.0f) {
//                JOptionPane.showMessageDialog(null, "Good Job ♥ " + name);
//                if(counter>0){
//                    JOptionPane.showMessageDialog(null, "You Win \n Your Score is ☺ " + counter);
//                }
//                else  JOptionPane.showMessageDialog(null, "You lost  " + -1*counter);
//
//                System.exit(0);
//            }
//
//        }

    }// end display method



    void drawStar(GL gl, double r, boolean filled, double x, double y, int angle) {
        gl.glPushMatrix();
        gl.glTranslated(x, y, 0);
        gl.glRotated(angle, 0, 0, 1);
        drawStar(gl, r, r/2 , 5, 90, 2, filled);
        gl.glPopMatrix();
    }


    void drawStar(GL gl, double r1, double r2, double sides, double startAngle, int step, boolean filled) {
        if (filled) {
            gl.glBegin(GL.GL_TRIANGLE_FAN);
        } else {
            gl.glBegin(GL.GL_LINE_LOOP);
        }

        for (double i = startAngle; i <= 360 + startAngle; i += 360.0 / sides) {
            gl.glVertex2d(r2 * Math.cos(Math.toRadians(i-180.0 / sides)), r2 * Math.sin(Math.toRadians(i-180.0 / sides)));
            gl.glVertex2d(r1 * Math.cos(Math.toRadians(i)), r1 * Math.sin(Math.toRadians(i)));
        }
        gl.glEnd();
    }



    void drawCircle(GL gl, int r, Color c, boolean filled, double x, double y) {
        gl.glPushMatrix();
        gl.glTranslated(x, y, 0);
        drawPolyLines(gl, r, c, 360, 0, 1, filled);
        gl.glPopMatrix();
    }


    void drawPolyLines(GL gl, int r, Color c, double sides, double startAngle, double step, boolean filled) {
        gl.glColor3fv(c.getColorComponents(null), 0);
        if (filled) {
            gl.glBegin(GL.GL_POLYGON);
        } else {
            gl.glBegin(GL.GL_LINE_LOOP);
        }

        for (double i = startAngle; i < 360 * step + startAngle; i += step * 360.0 / sides) {
            gl.glVertex2d(r * Math.cos(Math.toRadians(i)), r * Math.sin(Math.toRadians(i)));
        }
        gl.glEnd();
    }






    @Override
    public void reshape(GLAutoDrawable glad, int i, int i1, int i2, int i3) {
    }

    @Override
    public void displayChanged(GLAutoDrawable glad, boolean bln, boolean bln1) {
    }


}















